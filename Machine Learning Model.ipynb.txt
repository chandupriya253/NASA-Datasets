# Import libraries we need
import numpy as np  # For math and numbers
import matplotlib.pyplot as plt  # For making graphs
from mpl_toolkits.mplot3d import Axes3D  # For 3D plots
import scipy.io  # To load .mat files
import pandas as pd  # For organizing data

# Load the dataset (example: B0005 battery file)
data = scipy.io.loadmat('B0005.mat')  # Replace with actual file path

from sklearn.model_selection import train_test_split  # Split data
from sklearn.ensemble import RandomForestRegressor  # Prediction model
from sklearn.metrics import mean_squared_error  # Check accuracy

# Prepare data: EIS as input (X), capacity as output (y)
eis_features = np.column_stack((real_z, imag_z))  # Combine R(Z) and Im(Z)
capacity_target = data['B0005']['measurement'][0,0]['capacity'][0,0]['capacity'][0]

# Split data into training and testing
X_train, X_test, y_train, y_test = train_test_split(eis_features, capacity_target, test_size=0.2, random_state=42)

# Train the model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predict and check accuracy
y_pred = model.predict(X_test)
error = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {error}')

# Example prediction
sample_eis = eis_features[0]  # Take first EIS signature
predicted_capacity = model.predict([sample_eis])
print(f'Predicted Capacity: {predicted_capacity[0]}')